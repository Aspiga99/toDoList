{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;AAwBA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AAGA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAnHA;AAjCA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template lang=\"html\">\r\n  <div id=\"register-from\">\r\n    <form v-if=\"!userCreated\">\r\n      <h4>Registrati</h4>\r\n      <input type=\"text\" id=\"name\" max-length=\"50\" v-model=\"user.name\" placeholder=\"inserisci nome\" v-on:keyup=\"checkIfEmptyFields()\" required>\r\n      <input type=\"text\" max-length=\"50\" v-model=\"user.surname\" placeholder=\"inserisci cognome\" v-on:keyup=\"checkIfEmptyFields()\" required>\r\n      <input type=\"text\" max-length=\"50\" v-on:keyup=\"validEmail = checkEmail(user.email); checkIfEmptyFields()\" v-model=\"user.email\" placeholder=\"inserisci indirizzo email\" required>\r\n      <span class=\"errorMessage\" v-if=\"!validEmail\">* inserire un indirizzo email valido</span>\r\n      <span class=\"errorMessage\" v-if=\"userExists\">* indirizzo email già esistente</span>\r\n      <input  id=\"input-password\" type=\"password\" v-on:keyup=\"validPassword = analysePassword(user.password); checkIfEmptyFields(); equalPassword = checkIfEqualString(user.password, passwordReEntered);\"  v-model=\"user.password\" placeholder=\"inserisci password\" required>\r\n      <span class=\"errorMessage\" v-if=\"!validPassword\">* La password deve essere di almeno 6 caratteri e contenere almeno 1 carattere Maiuscolo, 1 carattere minuscolo e 1 numero</br></span>\r\n      <input type=\"password\" v-on:keyup=\"equalPassword = checkIfEqualString(user.password, passwordReEntered); checkIfEmptyFields()\" v-model=\"passwordReEntered\" placeholder=\"reinserisci password\" required>\r\n      <span class=\"errorMessage\" v-if=\"!equalPassword\">* le password inserite non corrispondono</br></span>\r\n      <span class=\"errorMessage\" v-if=\"emptyFields\">* compilare tutti i campi</span>\r\n\r\n      <button id=\"registerButton\" v-on:click.prevent=\"createUser\" class=\"btn btn-primary\">\r\n        Registrati\r\n        <img id=\"loadingGif\" v-if=\"creatingUser\" src=\"../../assets/images/loading.gif\"/>\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { auth, database } from \"../config/firebase_config.js\"\r\nexport default {\r\n  props:[\"testing\"],\r\n  data(){\r\n    return{\r\n      user:{\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        surname: \"\"\r\n      },\r\n      passwordReEntered: \"\",\r\n      validPassword: false,\r\n      equalPassword: true,\r\n      userExists: false,\r\n      validEmail: false,\r\n      userCreated: false,\r\n      emptyFields: true,\r\n      creatingUser: false,\r\n      validData: false\r\n    }\r\n  },\r\n  updated(){\r\n\r\n  },\r\n  created(){\r\n    this.analysePassword(this.user.password);\r\n    if(!this.testing){\r\n      this.$nextTick( () => {\r\n        this.checkIfEmptyFields();\r\n      });\r\n    }\r\n    this.userExists = false;\r\n  },\r\n  methods: {\r\n    // check is the email is valid or not\r\n    checkEmail: function(email) {\r\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      var validEmail = re.test(email);\r\n      return validEmail;\r\n    },\r\n    // create the user user in firebase\r\n    createUser: function(){\r\n        if(this.validPassword && this.equalPassword && this.validEmail && !this.emptyFields){\r\n          this.validData = true;\r\n          this.creatingUser = true;\r\n          if(!this.testing){\r\n            auth.createUserWithEmailAndPassword(this.user.email, this.user.password).then( (user) => {\r\n              if(user){ //the user has been created\r\n                // the user is created\r\n                this.userCreated = true;\r\n                //there aren't empty fields\r\n                this.emptyFields = false;\r\n                // the user not exists\r\n                this.userExists = false;\r\n                auth.onAuthStateChanged( (user) =>{\r\n                  if(user){\r\n                    this.$http.get(\"https://todolist-project99.firebaseio.com/users/\" + user.uid + \"/information.json\").then( (data) => {\r\n                      return data.json();\r\n                    }).then( (data) => {\r\n                      if(data == null){\r\n                        console.log(\"aaa\");\r\n                        database.ref('users/' + user.uid + \"/information\").set({\r\n                          email: this.user.email,\r\n                          name: this.user.name,\r\n                          surname: this.user.surname\r\n                        });\r\n                      }\r\n                      this.creatingUser = false;\r\n                    });\r\n                  }\r\n                });\r\n                alert(\"Il tuo account è stato creato! \\n Ora puoi creare i tuoi progetti nella home\");\r\n\r\n              }\r\n            }, (err) => {\r\n              this.creatingUser = false;\r\n              // the hasn't beed created\r\n              this.userCreated = false;\r\n              // the user already exists\r\n              this.userExists = true;\r\n              console.log(err.message);\r\n            });\r\n          }\r\n          else {\r\n            console.log(\"test... dati validi e utente creato\");\r\n          }\r\n        }\r\n        else {\r\n          if(this.testing){\r\n            this.validData = false;\r\n          }\r\n          else {\r\n            this.validData = false;\r\n            this.userCreated = false;\r\n            this.validPassword = this.analysePassword(this.user.password);\r\n            this.validEmail = this.checkEmail(this.user.email);\r\n            this.checkIfEmptyFields();\r\n            alert(\"dati non validi\");\r\n          }\r\n        }\r\n    },\r\n    // check if the password is valid\r\n    analysePassword: function(password){\r\n      if(password != undefined && password != null){\r\n        var re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,})\");\r\n        var check = re.test(password);\r\n        return check;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    //check if the string has the min length\r\n    checklengthString: function(s, minlength){\r\n      if(s != undefined && s != null && minlength > 0){\r\n        if(s.length < minlength){\r\n          // the string is short\r\n          return true;\r\n        }\r\n        else {\r\n          // the string length is good\r\n          return false;\r\n        }\r\n      }\r\n      else\r\n        return false;\r\n    },\r\n    //check if s1 and s2 are equal\r\n    checkIfEqualString: function(s1, s2){\r\n      if(s1 != undefined && s1 != null && s2 != undefined && s2 != null){\r\n        if(s1 === s2)\r\n          return true;\r\n        else\r\n          return false\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    checkIfEmptyFields: function(){\r\n      if(this.user.name == \"\" || this.user.surname == \"\" || this.user.email == \"\" || this.user.password == \"\" || this.passwordReEntered == \"\"){\r\n        this.emptyFields = true;\r\n        document.getElementById(\"registerButton\").disabled = true;\r\n      }\r\n      else{\r\n        this.emptyFields = false;\r\n        document.getElementById(\"registerButton\").disabled = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n#loadingGif{\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.btn-circle {\r\n  width: 30px;\r\n  height: 30px;\r\n  text-align: center;\r\n  padding: 6px 0;\r\n  font-size: 12px;\r\n  line-height: 1.428571429;\r\n  border-radius: 15px!important;\r\n}\r\n.btn-circle.btn-lg {\r\n  width: 50px;\r\n  height: 50px;\r\n  padding: 10px 16px;\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n  border-radius: 25px!important;\r\n}\r\n#info-password{\r\n  height: 44px;\r\n  float: right;\r\n}\r\n.errorMessage{\r\n  color: red;\r\n  font-size: 12px;\r\n}\r\nh4{\r\n  text-align: center;\r\n}\r\n\r\ninput[type=\"text\"], input[type=\"password\"]{\r\n  padding: 8px;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n#registerButton{\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  display: block;\r\n  width: 200px;\r\n  border-radius: 20px!important;\r\n\r\n}\r\n\r\n\r\nform{\r\n  width: 100%;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n"]}