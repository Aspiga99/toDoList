{"version":3,"sources":["Register.test.js"],"names":["wrapper","beforeEach","Component","propsData","testing","afterEach","destroy","describe","it","expect","html","toMatchSnapshot","inputField","findAll","at","setValue","vm","user","name","toBe","surname","email","password","passwordReEntered","checkEmail","validPassword","analysePassword","validEmail","equalPassword","checkIfEqualString","emptyFields","button","find","trigger","console","log","validData"],"mappings":"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","file":"Register.test.js","sourcesContent":["import Component from '../components/Register.vue'\r\nimport { shallowMount } from '@vue/test-utils'\r\n\r\nlet wrapper = null;\r\n\r\nbeforeEach(() => {\r\n  wrapper = shallowMount(Component, {\r\n    propsData:{\r\n      testing: true\r\n    }\r\n  });\r\n});\r\n\r\nafterEach(() => {\r\n  //destroy the wrapper component\r\n  wrapper.destroy();\r\n});\r\n\r\ndescribe(\"Register component\", () => {\r\n  //check if the component renders correctly\r\n  it(\"renders correctly\", () => {\r\n    expect(wrapper.html()).toMatchSnapshot();\r\n  });\r\n\r\n  //check if user.name is corretly bind to input field value\r\n  it(\"name is corretly bind to input field value\", function(){\r\n    const inputField = wrapper.findAll(\"input[type='text']\").at(0);\r\n    inputField.setValue(\"pippo\");\r\n    expect(wrapper.vm.user.name).toBe(\"pippo\");\r\n  });\r\n\r\n  //check if user.surname is corretly bind to input field value\r\n  it(\"surname is corretly bind to input field value\", function(){\r\n    const inputField = wrapper.findAll(\"input[type='text']\").at(1);\r\n    inputField.setValue(\"pippo\");\r\n    expect(wrapper.vm.user.surname).toBe(\"pippo\");\r\n  });\r\n\r\n  //check if user.email is corretly bind to input field value\r\n  it(\"email is corretly bind to input field value\", function(){\r\n    const inputField = wrapper.findAll(\"input[type='text']\").at(2);\r\n    inputField.setValue(\"pippo@p.com\");\r\n    expect(wrapper.vm.user.email).toBe(\"pippo@p.com\");\r\n  });\r\n\r\n  //check if user.password is corretly bind to input field value\r\n  it(\"password is corretly bind to input field value\", function(){\r\n    const inputField = wrapper.findAll(\"input[type='password']\").at(0);\r\n    inputField.setValue(\"pippo\");\r\n    expect(wrapper.vm.user.password).toBe(\"pippo\");\r\n  });\r\n\r\n  //check if re-entered password is corretly bind to input field value\r\n  it(\"re-entered password is corretly bind to input field value\", function(){\r\n    const inputField = wrapper.findAll(\"input[type='password']\").at(1);\r\n    inputField.setValue(\"pippo\");\r\n    expect(wrapper.vm.passwordReEntered).toBe(\"pippo\");\r\n  });\r\n\r\n  //check if checkEmail method works with correct email\r\n  it(\"checkEmail method return true with valid email\", function(){\r\n    expect(wrapper.vm.checkEmail(\"pippo@p.com\")).toBe(true);\r\n  });\r\n\r\n  //check if checkEmail method works with bad email\r\n  it(\"checkEmail method return false with bad email\", function(){\r\n    expect(wrapper.vm.checkEmail(\"pippo\")).toBe(false);\r\n  });\r\n\r\n  //check if analysePassword method works\r\n  it(\"analysePassword method return true with valid password\", function(){\r\n    wrapper.vm.validPassword = wrapper.vm.analysePassword(\"bg4CpkdA_J7;gxa%\");\r\n    expect(wrapper.vm.validPassword).toBe(true);\r\n  });\r\n\r\n  //check if analysePassword method works\r\n  it(\"analysePassword method return false with bad password\", function(){\r\n    wrapper.vm.validPassword = wrapper.vm.analysePassword(\"6`?sN\");\r\n    expect(wrapper.vm.validPassword).toBe(false);\r\n  });\r\n\r\n  //check if createuser method works\r\n  it(\"createUser method with valid data works\", function(){\r\n    wrapper.vm.user.email = \"pippo@p.com\";\r\n    wrapper.vm.user.password = \"pippopSw1\";\r\n    wrapper.vm.passwordReEntered = \"pippopSw1\";\r\n    wrapper.vm.user.name = \"pippo\";\r\n    wrapper.vm.user.surname = \"pip\";\r\n    wrapper.vm.validEmail = wrapper.vm.checkEmail(wrapper.vm.user.email);\r\n    wrapper.vm.validPassword = wrapper.vm.analysePassword(wrapper.vm.user.password);\r\n    wrapper.vm.equalPassword = wrapper.vm.checkIfEqualString(wrapper.vm.user.password, wrapper.vm.passwordReEntered);\r\n    wrapper.vm.emptyFields = false;\r\n    const button = wrapper.find(\"button\");\r\n    button.trigger(\"click\");\r\n    console.log(\"createUser method with valid data \\n valid data: \" + wrapper.vm.validData);\r\n    expect(wrapper.vm.validData).toBe(true);\r\n  });\r\n\r\n  //check if createuser method works\r\n  it(\"createUser method with not valid data works\", function(){\r\n    wrapper.vm.user.email = \"po@.com\";\r\n    wrapper.vm.user.password = \"pippopSw1\";\r\n    wrapper.vm.passwordReEntered = \"pippopSw1\";\r\n    wrapper.vm.user.name = \"pippo\";\r\n    wrapper.vm.user.surname = \"pip\";\r\n    wrapper.vm.validEmail = wrapper.vm.checkEmail(wrapper.vm.user.email);\r\n    wrapper.vm.validPassword = wrapper.vm.analysePassword(wrapper.vm.user.password);\r\n    wrapper.vm.equalPassword = wrapper.vm.checkIfEqualString(wrapper.vm.user.password, wrapper.vm.passwordReEntered);\r\n    wrapper.vm.emptyFields = false;\r\n    const button = wrapper.find(\"button\");\r\n    button.trigger(\"click\");\r\n    console.log(\"createUser method with not valid data \\n valid data: \" + wrapper.vm.validData);\r\n    expect(wrapper.vm.validData).toBe(false);\r\n  });\r\n\r\n});\r\n"]}